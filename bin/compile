#!/usr/bin/env bash
# bin/compile <build-dir> <cache-dir>

set -e # fail fast

# parse params
# BIN_DIR=$(cd $(dirname $0); pwd)
# ROOT_DIR=$(dirname $BIN_DIR)
BUILD_DIR=$1
CACHE_DIR=$2
ENV_DIR=$3

# config
S3_BUCKET="epic-heroku"

function indent() {
  c='s/^/       /'
  case $(uname) in
    Darwin) sed -l "$c";;
    *)      sed -u "$c";;
  esac
}

function vendor_binary() {
  binary="$1"
  path="$2"

  echo "Fetching $binary" | indent
  echo "Into path $path" | indent

  mkdir -p $path
  package="https://s3.amazonaws.com/$S3_BUCKET/$binary"
  curl $package -s -o - | tar xz -C $path -f -

  echo "Exporting $binary build and include paths" | indent

  if [ -d "$path/bin" ]; then
    export PATH=$path/bin:$PATH
  fi

  if [ -d "$path/lib/pkgconfig" ]; then
    # pkg-config should handle compiler options (if used)
    export PKG_CONFIG_PATH="$path/lib/pkgconfig:$PKG_CONFIG_PATH"
  fi

  # standard paths
  export CPPPATH="$path/include:$CPPPATH"
  export CPATH="$path/include:$CPATH"
  export CFLAGS="-I$path/include:$CFLAGS"
  export LIBRARY_PATH="$path/lib:$LIBRARY_PATH"
  export LD_LIBRARY_PATH="$path/lib:$LD_LIBRARY_PATH"
}

echo "-----> Vendoring binaries"

vendor_binary "libgirepository1.0-dev.tar.gz" "$1/vendor/libgirepository1.0-dev"

# node-canvas isn't using pkg-config, so we need to set non-standard paths
export CPPPATH="$BUILD_DIR/vendor/libgirepository1.0-dev/include/gobject-introspection-1.0:$CPPPATH"
export CPATH="$BUILD_DIR/vendor/libgirepository1.0-dev/include/gobject-introspection-1.0:$CPATH"

echo "-----> Configuring build environment"

cat <<EOF > export
export PATH="$PATH:\$PATH"
export LD_LIBRARY_PATH="\$LD_LIBRARY_PATH:$LD_LIBRARY_PATH"
export LIBRARY_PATH="\$LIBRARY_PATH:$LIBRARY_PATH"
export PKG_CONFIG_PATH="\$PKG_CONFIG_PATH:$PKG_CONFIG_PATH"
export CPPPATH="\$CPPPATH:$CPPPATH"
export CPATH="\$CPATH:$CPATH"
EOF

echo "-----> Building runtime environment"
mkdir -p $BUILD_DIR/.profile.d

cat <<EOF > $BUILD_DIR/.profile.d/$BUILDPACK_NAME.sh
export PATH="${PATH//$BUILD_DIR//app}:\$PATH"
export LD_LIBRARY_PATH="\$LD_LIBRARY_PATH:${LD_LIBRARY_PATH//$BUILD_DIR//app}"
export LIBRARY_PATH="\$LIBRARY_PATH:${LIBRARY_PATH//$BUILD_DIR//app}"
export PKG_CONFIG_PATH="\$PKG_CONFIG_PATH:${PKG_CONFIG_PATH//$BUILD_DIR//app}"
export CPPPATH="\$CPPPATH:${CPPPATH//$BUILD_DIR//app}"
export CPATH="\$CPATH:${CPATH//$BUILD_DIR//app}"
EOF